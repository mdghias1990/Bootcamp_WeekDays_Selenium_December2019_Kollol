<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="14" passed="14">
  <reporter-output>
    <line>
      <![CDATA[Extent Report Directory/Users/mdghiasuddin/Downloads/Bootcamp_WeekDays_Selenium_December2019_Kollol/LetsKodeIt/target/surefire-reports/html]]>
    </line>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="160080" started-at="2020-02-23T19:54:19 EST" finished-at="2020-02-23T19:56:59 EST">
    <groups>
    </groups>
    <test name="Surefire test" duration-ms="160080" started-at="2020-02-23T19:54:19 EST" finished-at="2020-02-23T19:56:59 EST">
      <class name="testhomepage.TestHomePage">
        <test-method status="PASS" signature="extentSetup(org.testng.ITestContext)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="extentSetup" is-config="true" duration-ms="479" started-at="2020-02-23T19:54:18 EST" finished-at="2020-02-23T19:54:19 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@12aa4996]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Extent Report Directory/Users/mdghiasuddin/Downloads/Bootcamp_WeekDays_Selenium_December2019_Kollol/LetsKodeIt/target/surefire-reports/html]]>
            </line>
          </reporter-output>
        </test-method> <!-- extentSetup -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="setUp" is-config="true" duration-ms="7292" started-at="2020-02-23T19:54:19 EST" finished-at="2020-02-23T19:54:26 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.15.2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://learn.letskodeit.com/p/practice]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="startExtent" is-config="true" duration-ms="14" started-at="2020-02-23T19:54:26 EST" finished-at="2020-02-23T19:54:26 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testhomepage.TestHomePage.clickon() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="clickon()[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="clickon" duration-ms="2371" started-at="2020-02-23T19:54:26 EST" finished-at="2020-02-23T19:54:29 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickon -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="afterEachTestMethod" is-config="true" duration-ms="710" started-at="2020-02-23T19:54:29 EST" finished-at="2020-02-23T19:54:29 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickon status=SUCCESS method=TestHomePage.clickon()[pri:0, instance:testhomepage.TestHomePage@1d16f93d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="cleanUp" is-config="true" duration-ms="6" started-at="2020-02-23T19:54:29 EST" finished-at="2020-02-23T19:54:29 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="setUp" is-config="true" duration-ms="8058" started-at="2020-02-23T19:54:29 EST" finished-at="2020-02-23T19:54:37 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.15.2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://learn.letskodeit.com/p/practice]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="startExtent" is-config="true" duration-ms="1" started-at="2020-02-23T19:54:37 EST" finished-at="2020-02-23T19:54:37 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhomepage.TestHomePage.testTopHeaderTag() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testTopHeaderTag()[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="testTopHeaderTag" duration-ms="2180" started-at="2020-02-23T19:54:37 EST" finished-at="2020-02-23T19:54:40 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTopHeaderTag -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="afterEachTestMethod" is-config="true" duration-ms="260" started-at="2020-02-23T19:54:40 EST" finished-at="2020-02-23T19:54:40 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTopHeaderTag status=SUCCESS method=TestHomePage.testTopHeaderTag()[pri:0, instance:testhomepage.TestHomePage@1d16f93d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="cleanUp" is-config="true" duration-ms="2" started-at="2020-02-23T19:54:40 EST" finished-at="2020-02-23T19:54:40 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="setUp" is-config="true" duration-ms="5457" started-at="2020-02-23T19:54:40 EST" finished-at="2020-02-23T19:54:45 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.15.2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://learn.letskodeit.com/p/practice]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="startExtent" is-config="true" duration-ms="1" started-at="2020-02-23T19:54:45 EST" finished-at="2020-02-23T19:54:45 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testhomepage.TestHomePage.testPracticeButton() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testPracticeButton()[pri:1, instance:testhomepage.TestHomePage@1d16f93d]" name="testPracticeButton" duration-ms="2389" started-at="2020-02-23T19:54:45 EST" finished-at="2020-02-23T19:54:48 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPracticeButton -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="afterEachTestMethod" is-config="true" duration-ms="227" started-at="2020-02-23T19:54:48 EST" finished-at="2020-02-23T19:54:48 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPracticeButton status=SUCCESS method=TestHomePage.testPracticeButton()[pri:1, instance:testhomepage.TestHomePage@1d16f93d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="cleanUp" is-config="true" duration-ms="0" started-at="2020-02-23T19:54:48 EST" finished-at="2020-02-23T19:54:48 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="setUp" is-config="true" duration-ms="5961" started-at="2020-02-23T19:54:48 EST" finished-at="2020-02-23T19:54:54 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.15.2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://learn.letskodeit.com/p/practice]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="startExtent" is-config="true" duration-ms="2" started-at="2020-02-23T19:54:54 EST" finished-at="2020-02-23T19:54:54 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testhomepage.TestHomePage.testSelectClassBar() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testSelectClassBar()[pri:2, instance:testhomepage.TestHomePage@1d16f93d]" name="testSelectClassBar" duration-ms="2355" started-at="2020-02-23T19:54:54 EST" finished-at="2020-02-23T19:54:56 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectClassBar -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="afterEachTestMethod" is-config="true" duration-ms="259" started-at="2020-02-23T19:54:56 EST" finished-at="2020-02-23T19:54:57 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSelectClassBar status=SUCCESS method=TestHomePage.testSelectClassBar()[pri:2, instance:testhomepage.TestHomePage@1d16f93d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="cleanUp" is-config="true" duration-ms="1" started-at="2020-02-23T19:54:57 EST" finished-at="2020-02-23T19:54:57 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="setUp" is-config="true" duration-ms="5623" started-at="2020-02-23T19:54:57 EST" finished-at="2020-02-23T19:55:02 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.15.2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://learn.letskodeit.com/p/practice]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="startExtent" is-config="true" duration-ms="1" started-at="2020-02-23T19:55:02 EST" finished-at="2020-02-23T19:55:02 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testhomepage.TestHomePage.clickOnRadioButton() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="clickOnRadioButton()[pri:3, instance:testhomepage.TestHomePage@1d16f93d]" name="clickOnRadioButton" duration-ms="4426" started-at="2020-02-23T19:55:02 EST" finished-at="2020-02-23T19:55:07 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickOnRadioButton -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="afterEachTestMethod" is-config="true" duration-ms="393" started-at="2020-02-23T19:55:07 EST" finished-at="2020-02-23T19:55:07 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickOnRadioButton status=SUCCESS method=TestHomePage.clickOnRadioButton()[pri:3, instance:testhomepage.TestHomePage@1d16f93d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="cleanUp" is-config="true" duration-ms="2" started-at="2020-02-23T19:55:07 EST" finished-at="2020-02-23T19:55:07 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="setUp" is-config="true" duration-ms="5337" started-at="2020-02-23T19:55:07 EST" finished-at="2020-02-23T19:55:12 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.15.2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://learn.letskodeit.com/p/practice]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="startExtent" is-config="true" duration-ms="1" started-at="2020-02-23T19:55:12 EST" finished-at="2020-02-23T19:55:12 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testhomepage.TestHomePage.clickOnSelectButton() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="clickOnSelectButton()[pri:4, instance:testhomepage.TestHomePage@1d16f93d]" name="clickOnSelectButton" duration-ms="5539" started-at="2020-02-23T19:55:12 EST" finished-at="2020-02-23T19:55:18 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickOnSelectButton -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="afterEachTestMethod" is-config="true" duration-ms="274" started-at="2020-02-23T19:55:18 EST" finished-at="2020-02-23T19:55:18 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickOnSelectButton status=SUCCESS method=TestHomePage.clickOnSelectButton()[pri:4, instance:testhomepage.TestHomePage@1d16f93d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="cleanUp" is-config="true" duration-ms="3" started-at="2020-02-23T19:55:18 EST" finished-at="2020-02-23T19:55:18 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="setUp" is-config="true" duration-ms="9570" started-at="2020-02-23T19:55:18 EST" finished-at="2020-02-23T19:55:28 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.15.2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://learn.letskodeit.com/p/practice]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="startExtent" is-config="true" duration-ms="1" started-at="2020-02-23T19:55:28 EST" finished-at="2020-02-23T19:55:28 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testhomepage.TestHomePage.clickOnSelectMultiButton() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="clickOnSelectMultiButton()[pri:5, instance:testhomepage.TestHomePage@1d16f93d]" name="clickOnSelectMultiButton" duration-ms="5849" started-at="2020-02-23T19:55:28 EST" finished-at="2020-02-23T19:55:34 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickOnSelectMultiButton -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="afterEachTestMethod" is-config="true" duration-ms="308" started-at="2020-02-23T19:55:34 EST" finished-at="2020-02-23T19:55:34 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickOnSelectMultiButton status=SUCCESS method=TestHomePage.clickOnSelectMultiButton()[pri:5, instance:testhomepage.TestHomePage@1d16f93d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="cleanUp" is-config="true" duration-ms="1" started-at="2020-02-23T19:55:34 EST" finished-at="2020-02-23T19:55:34 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="setUp" is-config="true" duration-ms="5568" started-at="2020-02-23T19:55:34 EST" finished-at="2020-02-23T19:55:39 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.15.2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://learn.letskodeit.com/p/practice]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="startExtent" is-config="true" duration-ms="0" started-at="2020-02-23T19:55:39 EST" finished-at="2020-02-23T19:55:39 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testhomepage.TestHomePage.clickOnCheckButton() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="clickOnCheckButton()[pri:6, instance:testhomepage.TestHomePage@1d16f93d]" name="clickOnCheckButton" duration-ms="5527" started-at="2020-02-23T19:55:39 EST" finished-at="2020-02-23T19:55:45 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickOnCheckButton -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="afterEachTestMethod" is-config="true" duration-ms="219" started-at="2020-02-23T19:55:45 EST" finished-at="2020-02-23T19:55:45 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickOnCheckButton status=SUCCESS method=TestHomePage.clickOnCheckButton()[pri:6, instance:testhomepage.TestHomePage@1d16f93d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="cleanUp" is-config="true" duration-ms="1" started-at="2020-02-23T19:55:45 EST" finished-at="2020-02-23T19:55:45 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="setUp" is-config="true" duration-ms="5676" started-at="2020-02-23T19:55:45 EST" finished-at="2020-02-23T19:55:51 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.15.2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://learn.letskodeit.com/p/practice]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="newWindowOpen()[pri:7, instance:testhomepage.TestHomePage@1d16f93d]" name="newWindowOpen" duration-ms="5777" started-at="2020-02-23T19:55:51 EST" finished-at="2020-02-23T19:55:57 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newWindowOpen -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="startExtent" is-config="true" duration-ms="0" started-at="2020-02-23T19:55:51 EST" finished-at="2020-02-23T19:55:51 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testhomepage.TestHomePage.newWindowOpen() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="afterEachTestMethod" is-config="true" duration-ms="239" started-at="2020-02-23T19:55:57 EST" finished-at="2020-02-23T19:55:57 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=newWindowOpen status=SUCCESS method=TestHomePage.newWindowOpen()[pri:7, instance:testhomepage.TestHomePage@1d16f93d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="cleanUp" is-config="true" duration-ms="0" started-at="2020-02-23T19:55:57 EST" finished-at="2020-02-23T19:55:57 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="setUp" is-config="true" duration-ms="5588" started-at="2020-02-23T19:55:57 EST" finished-at="2020-02-23T19:56:02 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.15.2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://learn.letskodeit.com/p/practice]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="startExtent" is-config="true" duration-ms="1" started-at="2020-02-23T19:56:02 EST" finished-at="2020-02-23T19:56:02 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testhomepage.TestHomePage.newWindowOpen1() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="newWindowOpen1()[pri:8, instance:testhomepage.TestHomePage@1d16f93d]" name="newWindowOpen1" duration-ms="5704" started-at="2020-02-23T19:56:02 EST" finished-at="2020-02-23T19:56:08 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newWindowOpen1 -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="afterEachTestMethod" is-config="true" duration-ms="377" started-at="2020-02-23T19:56:08 EST" finished-at="2020-02-23T19:56:09 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=newWindowOpen1 status=SUCCESS method=TestHomePage.newWindowOpen1()[pri:8, instance:testhomepage.TestHomePage@1d16f93d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="cleanUp" is-config="true" duration-ms="1" started-at="2020-02-23T19:56:09 EST" finished-at="2020-02-23T19:56:09 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="setUp" is-config="true" duration-ms="6406" started-at="2020-02-23T19:56:09 EST" finished-at="2020-02-23T19:56:15 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.15.2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://learn.letskodeit.com/p/practice]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="startExtent" is-config="true" duration-ms="1" started-at="2020-02-23T19:56:15 EST" finished-at="2020-02-23T19:56:15 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testhomepage.TestHomePage.alertHandleAccept() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="alertHandleAccept()[pri:9, instance:testhomepage.TestHomePage@1d16f93d]" name="alertHandleAccept" duration-ms="5017" started-at="2020-02-23T19:56:15 EST" finished-at="2020-02-23T19:56:20 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- alertHandleAccept -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="afterEachTestMethod" is-config="true" duration-ms="280" started-at="2020-02-23T19:56:20 EST" finished-at="2020-02-23T19:56:20 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=alertHandleAccept status=SUCCESS method=TestHomePage.alertHandleAccept()[pri:9, instance:testhomepage.TestHomePage@1d16f93d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="cleanUp" is-config="true" duration-ms="1" started-at="2020-02-23T19:56:20 EST" finished-at="2020-02-23T19:56:20 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="setUp" is-config="true" duration-ms="5311" started-at="2020-02-23T19:56:20 EST" finished-at="2020-02-23T19:56:26 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.15.2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://learn.letskodeit.com/p/practice]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="startExtent" is-config="true" duration-ms="1" started-at="2020-02-23T19:56:26 EST" finished-at="2020-02-23T19:56:26 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testhomepage.TestHomePage.alertHandleCancle() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="alertHandleCancle()[pri:10, instance:testhomepage.TestHomePage@1d16f93d]" name="alertHandleCancle" duration-ms="5022" started-at="2020-02-23T19:56:26 EST" finished-at="2020-02-23T19:56:31 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- alertHandleCancle -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="afterEachTestMethod" is-config="true" duration-ms="302" started-at="2020-02-23T19:56:31 EST" finished-at="2020-02-23T19:56:31 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=alertHandleCancle status=SUCCESS method=TestHomePage.alertHandleCancle()[pri:10, instance:testhomepage.TestHomePage@1d16f93d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="cleanUp" is-config="true" duration-ms="0" started-at="2020-02-23T19:56:31 EST" finished-at="2020-02-23T19:56:31 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="setUp" is-config="true" duration-ms="5896" started-at="2020-02-23T19:56:31 EST" finished-at="2020-02-23T19:56:37 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.15.2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://learn.letskodeit.com/p/practice]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="startExtent" is-config="true" duration-ms="1" started-at="2020-02-23T19:56:37 EST" finished-at="2020-02-23T19:56:37 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testhomepage.TestHomePage.getTable() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="getTable()[pri:11, instance:testhomepage.TestHomePage@1d16f93d]" name="getTable" duration-ms="4732" started-at="2020-02-23T19:56:37 EST" finished-at="2020-02-23T19:56:42 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTable -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="afterEachTestMethod" is-config="true" duration-ms="248" started-at="2020-02-23T19:56:42 EST" finished-at="2020-02-23T19:56:42 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getTable status=SUCCESS method=TestHomePage.getTable()[pri:11, instance:testhomepage.TestHomePage@1d16f93d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="cleanUp" is-config="true" duration-ms="0" started-at="2020-02-23T19:56:42 EST" finished-at="2020-02-23T19:56:42 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="setUp" is-config="true" duration-ms="5318" started-at="2020-02-23T19:56:42 EST" finished-at="2020-02-23T19:56:47 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.15.2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://learn.letskodeit.com/p/practice]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="startExtent" is-config="true" duration-ms="1" started-at="2020-02-23T19:56:47 EST" finished-at="2020-02-23T19:56:47 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testhomepage.TestHomePage.testiFrame() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testiFrame()[pri:12, instance:testhomepage.TestHomePage@1d16f93d]" name="testiFrame" duration-ms="11490" started-at="2020-02-23T19:56:47 EST" finished-at="2020-02-23T19:56:59 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testiFrame -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="afterEachTestMethod" is-config="true" duration-ms="356" started-at="2020-02-23T19:56:59 EST" finished-at="2020-02-23T19:56:59 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testiFrame status=SUCCESS method=TestHomePage.testiFrame()[pri:12, instance:testhomepage.TestHomePage@1d16f93d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="cleanUp" is-config="true" duration-ms="0" started-at="2020-02-23T19:56:59 EST" finished-at="2020-02-23T19:56:59 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="generateReport()[pri:0, instance:testhomepage.TestHomePage@1d16f93d]" name="generateReport" is-config="true" duration-ms="41" started-at="2020-02-23T19:56:59 EST" finished-at="2020-02-23T19:56:59 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
      </class> <!-- testhomepage.TestHomePage -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>

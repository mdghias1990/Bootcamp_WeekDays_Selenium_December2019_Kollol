<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="2" passed="0">
  <reporter-output>
    <line>
      <![CDATA[Extent Report Directory/Users/mdghiasuddin/Downloads/Bootcamp_WeekDays_Selenium_December2019_Kollol/Google/target/surefire-reports/html]]>
    </line>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="18981" started-at="2020-02-23T19:57:02 EST" finished-at="2020-02-23T19:57:21 EST">
    <groups>
    </groups>
    <test name="Surefire test" duration-ms="18981" started-at="2020-02-23T19:57:02 EST" finished-at="2020-02-23T19:57:21 EST">
      <class name="testhome.TestHomePage">
        <test-method status="PASS" signature="extentSetup(org.testng.ITestContext)[pri:0, instance:testhome.TestHomePage@7791a895]" name="extentSetup" is-config="true" duration-ms="378" started-at="2020-02-23T19:57:02 EST" finished-at="2020-02-23T19:57:02 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6d0b5baf]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Extent Report Directory/Users/mdghiasuddin/Downloads/Bootcamp_WeekDays_Selenium_December2019_Kollol/Google/target/surefire-reports/html]]>
            </line>
          </reporter-output>
        </test-method> <!-- extentSetup -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhome.TestHomePage@7791a895]" name="setUp" is-config="true" duration-ms="6814" started-at="2020-02-23T19:57:03 EST" finished-at="2020-02-23T19:57:09 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.15.2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://learn.letskodeit.com/p/practice]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhome.TestHomePage@7791a895]" name="startExtent" is-config="true" duration-ms="7" started-at="2020-02-23T19:57:09 EST" finished-at="2020-02-23T19:57:09 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testhome.TestHomePage.testSearchFromDB() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="FAIL" signature="testSearchFromDB()[pri:1, instance:testhome.TestHomePage@7791a895]" name="testSearchFromDB" duration-ms="1997" started-at="2020-02-23T19:57:09 EST" finished-at="2020-02-23T19:57:11 EST">
          <exception class="java.sql.SQLSyntaxErrorException">
            <message>
              <![CDATA[Table 'kolloldb.shuvro' doesn't exist]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.sql.SQLSyntaxErrorException: Table 'kolloldb.shuvro' doesn't exist
at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
at com.mysql.cj.jdbc.StatementImpl.executeQuery(StatementImpl.java:1200)
at databases.ConnectToSqlDB.readDataBase(ConnectToSqlDB.java:50)
at home.HomePage.searchDataBase(HomePage.java:21)
at testhome.TestHomePage.testSearchFromDB(TestHomePage.java:19)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeSingleClass(TestNGDirectoryTestSuite.java:112)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.sql.SQLSyntaxErrorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchFromDB -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhome.TestHomePage@7791a895]" name="afterEachTestMethod" is-config="true" duration-ms="1658" started-at="2020-02-23T19:57:11 EST" finished-at="2020-02-23T19:57:13 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSearchFromDB status=FAILURE method=TestHomePage.testSearchFromDB()[pri:1, instance:testhome.TestHomePage@7791a895] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:testhome.TestHomePage@7791a895]" name="cleanUp" is-config="true" duration-ms="0" started-at="2020-02-23T19:57:13 EST" finished-at="2020-02-23T19:57:13 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testhome.TestHomePage@7791a895]" name="setUp" is-config="true" duration-ms="6338" started-at="2020-02-23T19:57:13 EST" finished-at="2020-02-23T19:57:19 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OS X]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10.15.2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[chrome-options]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[79]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://learn.letskodeit.com/p/practice]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testhome.TestHomePage@7791a895]" name="startExtent" is-config="true" duration-ms="1" started-at="2020-02-23T19:57:19 EST" finished-at="2020-02-23T19:57:19 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void testhome.TestHomePage.testSearchFromExcel() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="FAIL" signature="testSearchFromExcel()[pri:2, instance:testhome.TestHomePage@7791a895]" name="testSearchFromExcel" duration-ms="1091" started-at="2020-02-23T19:57:19 EST" finished-at="2020-02-23T19:57:20 EST">
          <exception class="org.apache.poi.poifs.filesystem.OfficeXmlFileException">
            <message>
              <![CDATA[The supplied data appears to be in the Office 2007+ XML. You are calling the part of POI that deals with OLE2 Office Documents. You need to call a different part of POI to process this data (eg XSSF instead of HSSF)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.apache.poi.poifs.filesystem.OfficeXmlFileException: The supplied data appears to be in the Office 2007+ XML. You are calling the part of POI that deals with OLE2 Office Documents. You need to call a different part of POI to process this data (eg XSSF instead of HSSF)
at org.apache.poi.poifs.storage.HeaderBlock.<init>(HeaderBlock.java:126)
at org.apache.poi.poifs.storage.HeaderBlock.<init>(HeaderBlock.java:113)
at org.apache.poi.poifs.filesystem.NPOIFSFileSystem.<init>(NPOIFSFileSystem.java:301)
at org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java:413)
at org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java:394)
at utility.DataReader.fileReader1(DataReader.java:27)
at home.HomePage.searchFromExcel(HomePage.java:30)
at testhome.TestHomePage.testSearchFromExcel(TestHomePage.java:25)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeSingleClass(TestNGDirectoryTestSuite.java:112)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- org.apache.poi.poifs.filesystem.OfficeXmlFileException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchFromExcel -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testhome.TestHomePage@7791a895]" name="afterEachTestMethod" is-config="true" duration-ms="970" started-at="2020-02-23T19:57:20 EST" finished-at="2020-02-23T19:57:21 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSearchFromExcel status=FAILURE method=TestHomePage.testSearchFromExcel()[pri:2, instance:testhome.TestHomePage@7791a895] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:testhome.TestHomePage@7791a895]" name="cleanUp" is-config="true" duration-ms="1" started-at="2020-02-23T19:57:21 EST" finished-at="2020-02-23T19:57:21 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="generateReport()[pri:0, instance:testhome.TestHomePage@7791a895]" name="generateReport" is-config="true" duration-ms="263" started-at="2020-02-23T19:57:22 EST" finished-at="2020-02-23T19:57:22 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
      </class> <!-- testhome.TestHomePage -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
